// <auto-generated />
using System;
using AfaOHS.Persistence.Contexts;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Npgsql.EntityFrameworkCore.PostgreSQL.Metadata;

#nullable disable

namespace AfaOHS.Persistence.Migrations
{
    [DbContext(typeof(AfaOHSAPIDbContext))]
    partial class AfaOHSAPIDbContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "6.0.8")
                .HasAnnotation("Relational:MaxIdentifierLength", 63);

            NpgsqlModelBuilderExtensions.UseIdentityByDefaultColumns(modelBuilder);

            modelBuilder.Entity("AfaOHS.Domain.Entities.Bill", b =>
                {
                    b.Property<Guid>("BillId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.Property<DateTime>("BillDate")
                        .HasColumnType("timestamp with time zone");

                    b.Property<decimal>("BillSum")
                        .HasColumnType("numeric");

                    b.Property<string>("CompanyID")
                        .HasColumnType("text");

                    b.Property<DateTime>("CreationDate")
                        .HasColumnType("timestamp with time zone");

                    b.Property<string>("Explanation")
                        .HasColumnType("text");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("boolean");

                    b.Property<string>("Reason")
                        .HasColumnType("text");

                    b.Property<Guid>("ReasonId")
                        .HasColumnType("uuid");

                    b.Property<DateTime>("UpdateDate")
                        .HasColumnType("timestamp with time zone");

                    b.HasKey("BillId");

                    b.HasIndex("CompanyID");

                    b.ToTable("Bills");
                });

            modelBuilder.Entity("AfaOHS.Domain.Entities.Company", b =>
                {
                    b.Property<string>("CompanyID")
                        .HasColumnType("text");

                    b.Property<string>("Address")
                        .HasColumnType("text");

                    b.Property<DateTime>("ContractDate")
                        .HasColumnType("timestamp with time zone");

                    b.Property<string>("ContractNumber")
                        .HasColumnType("text");

                    b.Property<string>("Email")
                        .HasColumnType("text");

                    b.Property<string>("JobSecuritySpecialistNationalID")
                        .HasColumnType("text");

                    b.Property<int?>("NaceCodeId")
                        .HasColumnType("integer");

                    b.Property<string>("Name")
                        .HasColumnType("text");

                    b.Property<string>("OccupationalPhysicanNationalID")
                        .HasColumnType("text");

                    b.Property<string>("Phone")
                        .HasColumnType("text");

                    b.Property<string>("TaxNumber")
                        .HasColumnType("text");

                    b.Property<string>("TaxOffice")
                        .HasColumnType("text");

                    b.HasKey("CompanyID");

                    b.HasIndex("JobSecuritySpecialistNationalID");

                    b.HasIndex("NaceCodeId");

                    b.HasIndex("OccupationalPhysicanNationalID");

                    b.ToTable("Companies");
                });

            modelBuilder.Entity("AfaOHS.Domain.Entities.ContactEmployee", b =>
                {
                    b.Property<string>("NationalID")
                        .HasColumnType("text");

                    b.Property<string>("CompanyID")
                        .HasColumnType("text");

                    b.Property<DateTime>("CreationDate")
                        .HasColumnType("timestamp with time zone");

                    b.Property<string>("Email")
                        .HasColumnType("text");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("boolean");

                    b.Property<string>("MobilePhone")
                        .HasColumnType("text");

                    b.Property<string>("NameSurname")
                        .HasColumnType("text");

                    b.Property<int?>("OccupationId")
                        .HasColumnType("integer");

                    b.Property<DateTime>("UpdateDate")
                        .HasColumnType("timestamp with time zone");

                    b.HasKey("NationalID");

                    b.HasIndex("CompanyID");

                    b.HasIndex("OccupationId");

                    b.ToTable("contactEmployees");
                });

            modelBuilder.Entity("AfaOHS.Domain.Entities.DangerLevel", b =>
                {
                    b.Property<int>("DangerLevelId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("DangerLevelId"));

                    b.Property<string>("DangerLevelValue")
                        .HasColumnType("text");

                    b.HasKey("DangerLevelId");

                    b.ToTable("DangerLevels");
                });

            modelBuilder.Entity("AfaOHS.Domain.Entities.Education", b =>
                {
                    b.Property<int>("EducationId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("EducationId"));

                    b.Property<string>("EducationType")
                        .HasColumnType("text");

                    b.HasKey("EducationId");

                    b.ToTable("Educations");
                });

            modelBuilder.Entity("AfaOHS.Domain.Entities.Employee", b =>
                {
                    b.Property<string>("NationalID")
                        .HasColumnType("text");

                    b.Property<string>("Address")
                        .HasColumnType("text");

                    b.Property<DateTime>("CreationDate")
                        .HasColumnType("timestamp with time zone");

                    b.Property<int?>("EducationId")
                        .HasColumnType("integer");

                    b.Property<string>("Email")
                        .HasColumnType("text");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("boolean");

                    b.Property<string>("MobilePhone")
                        .HasColumnType("text");

                    b.Property<string>("NameSurname")
                        .HasColumnType("text");

                    b.Property<int?>("OccupationId")
                        .HasColumnType("integer");

                    b.Property<DateTime>("UpdateDate")
                        .HasColumnType("timestamp with time zone");

                    b.HasKey("NationalID");

                    b.HasIndex("EducationId");

                    b.HasIndex("OccupationId");

                    b.ToTable("Employee");
                });

            modelBuilder.Entity("AfaOHS.Domain.Entities.EmployeeCompany", b =>
                {
                    b.Property<int>("EmployeeCompanyId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("EmployeeCompanyId"));

                    b.Property<string>("CompanyID")
                        .HasColumnType("text");

                    b.Property<string>("EmployeeNationalID")
                        .HasColumnType("text");

                    b.Property<int?>("OccupationId")
                        .HasColumnType("integer");

                    b.Property<DateTime>("QuitDate")
                        .HasColumnType("timestamp with time zone");

                    b.Property<DateTime>("StartDate")
                        .HasColumnType("timestamp with time zone");

                    b.HasKey("EmployeeCompanyId");

                    b.HasIndex("CompanyID");

                    b.HasIndex("EmployeeNationalID");

                    b.HasIndex("OccupationId");

                    b.ToTable("EmployeeCompanies");
                });

            modelBuilder.Entity("AfaOHS.Domain.Entities.EmployeeOSE", b =>
                {
                    b.Property<int>("EmployeeOSEId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("EmployeeOSEId"));

                    b.Property<string>("EmployeeNationalID")
                        .HasColumnType("text");

                    b.Property<DateTime>("NextEducationDate")
                        .HasColumnType("timestamp with time zone");

                    b.Property<Guid?>("OccupationalSafetyEducationID")
                        .HasColumnType("uuid");

                    b.Property<int>("PreTestScore")
                        .HasColumnType("integer");

                    b.Property<int>("TestScore")
                        .HasColumnType("integer");

                    b.HasKey("EmployeeOSEId");

                    b.HasIndex("EmployeeNationalID");

                    b.HasIndex("OccupationalSafetyEducationID");

                    b.ToTable("EmployeeOSEs");
                });

            modelBuilder.Entity("AfaOHS.Domain.Entities.HealthObservation", b =>
                {
                    b.Property<Guid>("HealthObservationId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.Property<string>("EmployeeNationalID")
                        .HasColumnType("text");

                    b.Property<DateTime>("NextObservationDate")
                        .HasColumnType("timestamp with time zone");

                    b.Property<DateTime>("ObservationDate")
                        .HasColumnType("timestamp with time zone");

                    b.Property<string>("WorkplacePhysicanNationalID")
                        .HasColumnType("text");

                    b.HasKey("HealthObservationId");

                    b.HasIndex("EmployeeNationalID");

                    b.HasIndex("WorkplacePhysicanNationalID");

                    b.ToTable("HealthObservations");
                });

            modelBuilder.Entity("AfaOHS.Domain.Entities.NaceCode", b =>
                {
                    b.Property<int>("NaceCodeId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("NaceCodeId"));

                    b.Property<int?>("DangerLevelId")
                        .HasColumnType("integer");

                    b.Property<string>("Explanation")
                        .HasColumnType("text");

                    b.Property<string>("NACECode")
                        .HasColumnType("text");

                    b.HasKey("NaceCodeId");

                    b.HasIndex("DangerLevelId");

                    b.ToTable("NaceCodes");
                });

            modelBuilder.Entity("AfaOHS.Domain.Entities.Occupation", b =>
                {
                    b.Property<int>("OccupationId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("OccupationId"));

                    b.Property<string>("OccupationType")
                        .HasColumnType("text");

                    b.HasKey("OccupationId");

                    b.ToTable("Occupations");
                });

            modelBuilder.Entity("AfaOHS.Domain.Entities.OccupationalSafetyEducation", b =>
                {
                    b.Property<Guid>("OccupationalSafetyEducationID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.Property<string>("CompanyID")
                        .HasColumnType("text");

                    b.Property<DateTime>("EducationDate")
                        .HasColumnType("timestamp with time zone");

                    b.Property<string>("InstructureNationalID")
                        .HasColumnType("text");

                    b.HasKey("OccupationalSafetyEducationID");

                    b.HasIndex("CompanyID");

                    b.HasIndex("InstructureNationalID");

                    b.ToTable("OccupationalSafetyEducations");
                });

            modelBuilder.Entity("AfaOHS.Domain.Entities.OHSEmployee", b =>
                {
                    b.Property<string>("NationalID")
                        .HasColumnType("text");

                    b.Property<string>("CertificateNumber")
                        .HasColumnType("text");

                    b.Property<DateTime>("CreationDate")
                        .HasColumnType("timestamp with time zone");

                    b.Property<string>("Email")
                        .HasColumnType("text");

                    b.Property<bool>("IsActive")
                        .HasColumnType("boolean");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("boolean");

                    b.Property<string>("MobilePhone")
                        .HasColumnType("text");

                    b.Property<string>("NameSurname")
                        .HasColumnType("text");

                    b.Property<int?>("OccupationId")
                        .HasColumnType("integer");

                    b.Property<string>("Password")
                        .HasColumnType("text");

                    b.Property<DateTime>("UpdateDate")
                        .HasColumnType("timestamp with time zone");

                    b.Property<int?>("UserRoleId")
                        .HasColumnType("integer");

                    b.HasKey("NationalID");

                    b.HasIndex("OccupationId");

                    b.HasIndex("UserRoleId");

                    b.ToTable("OHSEmployees");
                });

            modelBuilder.Entity("AfaOHS.Domain.Entities.RiskAnalysis", b =>
                {
                    b.Property<Guid>("RiskAnalysisId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.Property<DateTime>("AnalysisDate")
                        .HasColumnType("timestamp with time zone");

                    b.Property<string>("AnalyzerNationalID")
                        .HasColumnType("text");

                    b.Property<string>("CompanyID")
                        .HasColumnType("text");

                    b.Property<DateTime>("ExpirationDate")
                        .HasColumnType("timestamp with time zone");

                    b.Property<DateTime>("FixDate")
                        .HasColumnType("timestamp with time zone");

                    b.Property<bool>("IsFixed")
                        .HasColumnType("boolean");

                    b.Property<int>("Score")
                        .HasColumnType("integer");

                    b.HasKey("RiskAnalysisId");

                    b.HasIndex("AnalyzerNationalID");

                    b.HasIndex("CompanyID");

                    b.ToTable("RiskAnalyses");
                });

            modelBuilder.Entity("AfaOHS.Domain.Entities.SUTData", b =>
                {
                    b.Property<int>("SUTDataId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("SUTDataId"));

                    b.Property<int?>("DangerLevelId")
                        .HasColumnType("integer");

                    b.Property<int>("EmployeeCount")
                        .HasColumnType("integer");

                    b.Property<decimal>("OHFee")
                        .HasColumnType("numeric");

                    b.Property<decimal>("OHSFee")
                        .HasColumnType("numeric");

                    b.Property<decimal>("OSFee")
                        .HasColumnType("numeric");

                    b.HasKey("SUTDataId");

                    b.HasIndex("DangerLevelId");

                    b.ToTable("SUTDatas");
                });

            modelBuilder.Entity("AfaOHS.Domain.Entities.UserRole", b =>
                {
                    b.Property<int>("UserRoleId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("UserRoleId"));

                    b.Property<string>("RoleType")
                        .HasColumnType("text");

                    b.HasKey("UserRoleId");

                    b.ToTable("UserRoles");
                });

            modelBuilder.Entity("AfaOHS.Domain.Entities.Bill", b =>
                {
                    b.HasOne("AfaOHS.Domain.Entities.Company", "Company")
                        .WithMany()
                        .HasForeignKey("CompanyID");

                    b.Navigation("Company");
                });

            modelBuilder.Entity("AfaOHS.Domain.Entities.Company", b =>
                {
                    b.HasOne("AfaOHS.Domain.Entities.OHSEmployee", "JobSecuritySpecialist")
                        .WithMany()
                        .HasForeignKey("JobSecuritySpecialistNationalID");

                    b.HasOne("AfaOHS.Domain.Entities.NaceCode", "NaceCode")
                        .WithMany()
                        .HasForeignKey("NaceCodeId");

                    b.HasOne("AfaOHS.Domain.Entities.OHSEmployee", "OccupationalPhysican")
                        .WithMany()
                        .HasForeignKey("OccupationalPhysicanNationalID");

                    b.Navigation("JobSecuritySpecialist");

                    b.Navigation("NaceCode");

                    b.Navigation("OccupationalPhysican");
                });

            modelBuilder.Entity("AfaOHS.Domain.Entities.ContactEmployee", b =>
                {
                    b.HasOne("AfaOHS.Domain.Entities.Company", "Company")
                        .WithMany()
                        .HasForeignKey("CompanyID");

                    b.HasOne("AfaOHS.Domain.Entities.Occupation", "Occupation")
                        .WithMany()
                        .HasForeignKey("OccupationId");

                    b.Navigation("Company");

                    b.Navigation("Occupation");
                });

            modelBuilder.Entity("AfaOHS.Domain.Entities.Employee", b =>
                {
                    b.HasOne("AfaOHS.Domain.Entities.Education", "Education")
                        .WithMany()
                        .HasForeignKey("EducationId");

                    b.HasOne("AfaOHS.Domain.Entities.Occupation", "Occupation")
                        .WithMany()
                        .HasForeignKey("OccupationId");

                    b.Navigation("Education");

                    b.Navigation("Occupation");
                });

            modelBuilder.Entity("AfaOHS.Domain.Entities.EmployeeCompany", b =>
                {
                    b.HasOne("AfaOHS.Domain.Entities.Company", "Company")
                        .WithMany()
                        .HasForeignKey("CompanyID");

                    b.HasOne("AfaOHS.Domain.Entities.Employee", "Employee")
                        .WithMany()
                        .HasForeignKey("EmployeeNationalID");

                    b.HasOne("AfaOHS.Domain.Entities.Occupation", "Occupation")
                        .WithMany()
                        .HasForeignKey("OccupationId");

                    b.Navigation("Company");

                    b.Navigation("Employee");

                    b.Navigation("Occupation");
                });

            modelBuilder.Entity("AfaOHS.Domain.Entities.EmployeeOSE", b =>
                {
                    b.HasOne("AfaOHS.Domain.Entities.Employee", "Employee")
                        .WithMany()
                        .HasForeignKey("EmployeeNationalID");

                    b.HasOne("AfaOHS.Domain.Entities.OccupationalSafetyEducation", "OccupationalSafetyEducation")
                        .WithMany()
                        .HasForeignKey("OccupationalSafetyEducationID");

                    b.Navigation("Employee");

                    b.Navigation("OccupationalSafetyEducation");
                });

            modelBuilder.Entity("AfaOHS.Domain.Entities.HealthObservation", b =>
                {
                    b.HasOne("AfaOHS.Domain.Entities.Employee", "Employee")
                        .WithMany()
                        .HasForeignKey("EmployeeNationalID");

                    b.HasOne("AfaOHS.Domain.Entities.OHSEmployee", "WorkplacePhysican")
                        .WithMany()
                        .HasForeignKey("WorkplacePhysicanNationalID");

                    b.Navigation("Employee");

                    b.Navigation("WorkplacePhysican");
                });

            modelBuilder.Entity("AfaOHS.Domain.Entities.NaceCode", b =>
                {
                    b.HasOne("AfaOHS.Domain.Entities.DangerLevel", "DangerLevel")
                        .WithMany()
                        .HasForeignKey("DangerLevelId");

                    b.Navigation("DangerLevel");
                });

            modelBuilder.Entity("AfaOHS.Domain.Entities.OccupationalSafetyEducation", b =>
                {
                    b.HasOne("AfaOHS.Domain.Entities.Company", "Company")
                        .WithMany()
                        .HasForeignKey("CompanyID");

                    b.HasOne("AfaOHS.Domain.Entities.OHSEmployee", "Instructure")
                        .WithMany()
                        .HasForeignKey("InstructureNationalID");

                    b.Navigation("Company");

                    b.Navigation("Instructure");
                });

            modelBuilder.Entity("AfaOHS.Domain.Entities.OHSEmployee", b =>
                {
                    b.HasOne("AfaOHS.Domain.Entities.Occupation", "Occupation")
                        .WithMany()
                        .HasForeignKey("OccupationId");

                    b.HasOne("AfaOHS.Domain.Entities.UserRole", "UserRole")
                        .WithMany()
                        .HasForeignKey("UserRoleId");

                    b.Navigation("Occupation");

                    b.Navigation("UserRole");
                });

            modelBuilder.Entity("AfaOHS.Domain.Entities.RiskAnalysis", b =>
                {
                    b.HasOne("AfaOHS.Domain.Entities.OHSEmployee", "Analyzer")
                        .WithMany()
                        .HasForeignKey("AnalyzerNationalID");

                    b.HasOne("AfaOHS.Domain.Entities.Company", "Company")
                        .WithMany()
                        .HasForeignKey("CompanyID");

                    b.Navigation("Analyzer");

                    b.Navigation("Company");
                });

            modelBuilder.Entity("AfaOHS.Domain.Entities.SUTData", b =>
                {
                    b.HasOne("AfaOHS.Domain.Entities.DangerLevel", "DangerLevel")
                        .WithMany()
                        .HasForeignKey("DangerLevelId");

                    b.Navigation("DangerLevel");
                });
#pragma warning restore 612, 618
        }
    }
}
